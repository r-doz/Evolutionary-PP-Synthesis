AGENT_SIZE:              100
BNF_GRAMMAR:             {' {::}': ['<fc>'], ' {::}  if ': ['<fc>'], ' { {:     if ': ['<fc>'], '{ {:         ': ['<fc>'], ' :}     } else { {:        ': ['<fc>'], ' :}    } end if; :} } else { {:     if ': ['<fc>'], ' :}     } else { {:         ': ['<fc>'], ' :}     } end if; :} } end if;': ['<fc>'], '{::}': ['<hole>'], 'if ': ['<instr>'], ' { {: ': ['<instr>'], ' :} } else { {: ': ['<instr>'], ' :} } end if;': ['<instr>'], ' = ': ['<assignment>'], ';': ['<assignment>', '<right_assign>'], ' * ': ['<const_term>', '<mul>', '<monom>'], ' + ': ['<add>', '<lexpr>'], '  - ': ['<add>'], '  * ': ['<add_term>'], 'gm([': ['<vars>'], ', 1, 0], [': ['<vars>'], ', 0, 0])': ['<vars>'], '[': ['<triplets>'], ', ': ['<triplets>'], ', 0]': ['<triplets>'], ', 0], ': ['<triplets>'], '.': ['<element>', '<num_pos>'], ' ': ['<bexpr>'], '<': ['<loperator>'], '<=': ['<loperator>'], '>=': ['<loperator>'], '>': ['<loperator>'], '==': ['<equal>'], '!=': ['<equal>'], '0': ['<num>'], '1': ['<num>', '<int_pos>', '<int_pos_trunc>'], '2': ['<num>', '<int_pos>', '<int_pos_trunc>'], '3': ['<num>', '<int_pos>', '<int_pos_trunc>'], '4': ['<num>', '<int_pos>', '<int_pos_trunc>'], '5': ['<num>', '<int_pos>'], '6': ['<num>', '<int_pos>'], '7': ['<num>', '<int_pos>'], '8': ['<num>', '<int_pos>'], '9': ['<num>', '<int_pos>'], '10': ['<num>'], 'u': ['<idv>'], 'v': ['<idv>'], 'w': ['<idv>'], 'x': ['<idv>']} {'<fc>': {'id': '<fc>', 'min_steps': 6, 'expanded': True, 'recursive': [{'choice': [{'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' {::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' {::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' {::}  if ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<bexpr>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ' { {:     if ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<bexpr>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': '{ {:         ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}     } else { {:        ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}    } end if; :} } else { {:     if ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<bexpr>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': '{ {:         ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}     } else { {:         ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}     } end if; :} } end if;', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 5}], 'b_factor': 1, 'min_path': [{'choice': [{'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' {::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' {::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' {::}  if ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<bexpr>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ' { {:     if ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<bexpr>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': '{ {:         ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}     } else { {:        ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}    } end if; :} } else { {:     if ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<bexpr>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': '{ {:         ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}     } else { {:         ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}     } end if; :} } end if;', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 5}]}, '<hole>': {'id': '<hole>', 'min_steps': 7, 'expanded': True, 'recursive': [{'choice': [{'symbol': '<instr>', 'type': 'NT', 'min_steps': 6, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 6}, {'choice': [{'symbol': '<instr>', 'type': 'NT', 'min_steps': 6, 'recursive': True}, {'symbol': '{::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<instr>', 'type': 'NT', 'min_steps': 6, 'recursive': True}, {'symbol': '{::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<hole>', 'type': 'NT', 'min_steps': 7, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 7}, {'choice': [{'symbol': '<instr>', 'type': 'NT', 'min_steps': 6, 'recursive': True}, {'symbol': '{::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<hole>', 'type': 'NT', 'min_steps': 7, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 7}], 'b_factor': 3, 'min_path': [{'choice': [{'symbol': '<instr>', 'type': 'NT', 'min_steps': 6, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 6}]}, '<instr>': {'id': '<instr>', 'min_steps': 6, 'expanded': True, 'recursive': [{'choice': [{'symbol': 'if ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<bexpr>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ' { {: ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<hole>', 'type': 'NT', 'min_steps': 7, 'recursive': True}, {'symbol': ' :} } else { {: ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<hole>', 'type': 'NT', 'min_steps': 7, 'recursive': True}, {'symbol': ' :} } end if;', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 7}], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 5}]}, '<assignment>': {'id': '<assignment>', 'min_steps': 5, 'expanded': True, 'recursive': [], 'b_factor': 1, 'min_path': [{'choice': [{'symbol': '<idv>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' = ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<add>', 'type': 'NT', 'min_steps': 4, 'recursive': False}, {'symbol': ';', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 4}]}, '<right_assign>': {'id': '<right_assign>', 'min_steps': 5, 'expanded': True, 'recursive': [], 'b_factor': 1, 'min_path': [{'choice': [{'symbol': '<add>', 'type': 'NT', 'min_steps': 4, 'recursive': False}, {'symbol': ';', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 4}]}, '<const_term>': {'id': '<const_term>', 'min_steps': 2, 'expanded': True, 'recursive': [], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' * ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}]}, '<add>': {'id': '<add>', 'min_steps': 4, 'expanded': True, 'recursive': [], 'b_factor': 3, 'min_path': [{'choice': [{'symbol': '<add_term>', 'type': 'NT', 'min_steps': 3, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 3}, {'choice': [{'symbol': '<add_term>', 'type': 'NT', 'min_steps': 3, 'recursive': False}, {'symbol': ' + ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<add_term>', 'type': 'NT', 'min_steps': 3, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 3}, {'choice': [{'symbol': '<add_term>', 'type': 'NT', 'min_steps': 3, 'recursive': False}, {'symbol': '  - ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<add_term>', 'type': 'NT', 'min_steps': 3, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 3}]}, '<add_term>': {'id': '<add_term>', 'min_steps': 3, 'expanded': True, 'recursive': [], 'b_factor': 3, 'min_path': [{'choice': [{'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': '  * ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '<const_term>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}]}, '<vars>': {'id': '<vars>', 'min_steps': 2, 'expanded': True, 'recursive': [], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<idv>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}, {'choice': [{'symbol': 'gm([', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ', 1, 0], [', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ', 0, 0])', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}]}, '<triplets>': {'id': '<triplets>', 'min_steps': 3, 'expanded': True, 'recursive': [{'choice': [{'symbol': '[', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<element>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ', ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<element>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ', 0]', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '[', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<element>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ', ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<element>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ', 0], ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<triplets>', 'type': 'NT', 'min_steps': 3, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 3}], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '[', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<element>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ', ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<element>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ', 0]', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 2}]}, '<element>': {'id': '<element>', 'min_steps': 2, 'expanded': True, 'recursive': [{'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': '.', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<int_pos>', 'type': 'NT', 'min_steps': 1, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 1}], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': '.', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<int_pos>', 'type': 'NT', 'min_steps': 1, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 1}]}, '<num_pos>': {'id': '<num_pos>', 'min_steps': 2, 'expanded': True, 'recursive': [{'choice': [{'symbol': '<int_pos>', 'type': 'NT', 'min_steps': 1, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 1}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': '.', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<int_pos>', 'type': 'NT', 'min_steps': 1, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 1}], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<int_pos>', 'type': 'NT', 'min_steps': 1, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 1}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': '.', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<int_pos>', 'type': 'NT', 'min_steps': 1, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 1}]}, '<mul>': {'id': '<mul>', 'min_steps': 3, 'expanded': True, 'recursive': [], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}, {'symbol': ' * ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' * ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}]}, '<bexpr>': {'id': '<bexpr>', 'min_steps': 2, 'expanded': True, 'recursive': [{'choice': [{'symbol': '<lexpr>', 'type': 'NT', 'min_steps': 4, 'recursive': True}, {'symbol': ' ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<loperator>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 4}], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<idv>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<equal>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}]}, '<lexpr>': {'id': '<lexpr>', 'min_steps': 4, 'expanded': True, 'recursive': [{'choice': [{'symbol': '<monom>', 'type': 'NT', 'min_steps': 3, 'recursive': False}, {'symbol': ' + ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<lexpr>', 'type': 'NT', 'min_steps': 4, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 4}], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<monom>', 'type': 'NT', 'min_steps': 3, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 3}]}, '<monom>': {'id': '<monom>', 'min_steps': 3, 'expanded': True, 'recursive': [], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' * ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}]}, '<loperator>': {'id': '<loperator>', 'min_steps': 1, 'expanded': True, 'recursive': [], 'b_factor': 4, 'min_path': [{'choice': [{'symbol': '<', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '<=', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '>=', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '>', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}]}, '<equal>': {'id': '<equal>', 'min_steps': 1, 'expanded': True, 'recursive': [], 'b_factor': 2, 'min_path': [{'choice': [{'symbol': '==', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '!=', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}]}, '<num>': {'id': '<num>', 'min_steps': 1, 'expanded': True, 'recursive': [], 'b_factor': 11, 'min_path': [{'choice': [{'symbol': '0', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '1', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '2', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '3', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '4', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '5', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '6', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '7', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '8', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '9', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '10', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}]}, '<int_pos>': {'id': '<int_pos>', 'min_steps': 1, 'expanded': True, 'recursive': [], 'b_factor': 9, 'min_path': [{'choice': [{'symbol': '1', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '2', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '3', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '4', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '5', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '6', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '7', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '8', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '9', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}]}, '<int_pos_trunc>': {'id': '<int_pos_trunc>', 'min_steps': 1, 'expanded': True, 'recursive': [], 'b_factor': 4, 'min_path': [{'choice': [{'symbol': '1', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '2', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '3', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '4', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}]}, '<idv>': {'id': '<idv>', 'min_steps': 1, 'expanded': True, 'recursive': [], 'b_factor': 4, 'min_path': [{'choice': [{'symbol': 'u', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': 'v', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': 'w', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': 'x', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}]}} {'<fc>': {'choices': [{'choice': [{'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' {::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' {::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' {::}  if ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<bexpr>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ' { {:     if ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<bexpr>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': '{ {:         ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}     } else { {:        ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}    } end if; :} } else { {:     if ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<bexpr>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': '{ {:         ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}     } else { {:         ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}, {'symbol': ' :}     } end if; :} } end if;', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 5}], 'no_choices': 1}, '<hole>': {'choices': [{'choice': [{'symbol': '<instr>', 'type': 'NT', 'min_steps': 6, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 6}, {'choice': [{'symbol': '<instr>', 'type': 'NT', 'min_steps': 6, 'recursive': True}, {'symbol': '{::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<instr>', 'type': 'NT', 'min_steps': 6, 'recursive': True}, {'symbol': '{::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<hole>', 'type': 'NT', 'min_steps': 7, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 7}, {'choice': [{'symbol': '<instr>', 'type': 'NT', 'min_steps': 6, 'recursive': True}, {'symbol': '{::}', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<hole>', 'type': 'NT', 'min_steps': 7, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 7}], 'no_choices': 3}, '<instr>': {'choices': [{'choice': [{'symbol': '<assignment>', 'type': 'NT', 'min_steps': 5, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 5}, {'choice': [{'symbol': 'if ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<bexpr>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ' { {: ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<hole>', 'type': 'NT', 'min_steps': 7, 'recursive': True}, {'symbol': ' :} } else { {: ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<hole>', 'type': 'NT', 'min_steps': 7, 'recursive': True}, {'symbol': ' :} } end if;', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 7}], 'no_choices': 2}, '<assignment>': {'choices': [{'choice': [{'symbol': '<idv>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' = ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<add>', 'type': 'NT', 'min_steps': 4, 'recursive': False}, {'symbol': ';', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 4}], 'no_choices': 1}, '<right_assign>': {'choices': [{'choice': [{'symbol': '<add>', 'type': 'NT', 'min_steps': 4, 'recursive': False}, {'symbol': ';', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 4}], 'no_choices': 1}, '<const_term>': {'choices': [{'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' * ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}], 'no_choices': 2}, '<add>': {'choices': [{'choice': [{'symbol': '<add_term>', 'type': 'NT', 'min_steps': 3, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 3}, {'choice': [{'symbol': '<add_term>', 'type': 'NT', 'min_steps': 3, 'recursive': False}, {'symbol': ' + ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<add_term>', 'type': 'NT', 'min_steps': 3, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 3}, {'choice': [{'symbol': '<add_term>', 'type': 'NT', 'min_steps': 3, 'recursive': False}, {'symbol': '  - ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<add_term>', 'type': 'NT', 'min_steps': 3, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 3}], 'no_choices': 3}, '<add_term>': {'choices': [{'choice': [{'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': '  * ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '<const_term>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}], 'no_choices': 3}, '<vars>': {'choices': [{'choice': [{'symbol': '<idv>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}, {'choice': [{'symbol': 'gm([', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ', 1, 0], [', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ', 0, 0])', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}], 'no_choices': 2}, '<triplets>': {'choices': [{'choice': [{'symbol': '[', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<element>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ', ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<element>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ', 0]', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '[', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<element>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ', ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<element>', 'type': 'NT', 'min_steps': 2, 'recursive': True}, {'symbol': ', 0], ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<triplets>', 'type': 'NT', 'min_steps': 3, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 3}], 'no_choices': 2}, '<element>': {'choices': [{'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': '.', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<int_pos>', 'type': 'NT', 'min_steps': 1, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 1}], 'no_choices': 2}, '<num_pos>': {'choices': [{'choice': [{'symbol': '<int_pos>', 'type': 'NT', 'min_steps': 1, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 1}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': '.', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<int_pos>', 'type': 'NT', 'min_steps': 1, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 1}], 'no_choices': 2}, '<mul>': {'choices': [{'choice': [{'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}, {'symbol': ' * ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' * ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}], 'no_choices': 2}, '<bexpr>': {'choices': [{'choice': [{'symbol': '<idv>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<equal>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 1}, {'choice': [{'symbol': '<lexpr>', 'type': 'NT', 'min_steps': 4, 'recursive': True}, {'symbol': ' ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<loperator>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}], 'recursive': True, 'NT_kids': True, 'max_path': 4}], 'no_choices': 2}, '<lexpr>': {'choices': [{'choice': [{'symbol': '<monom>', 'type': 'NT', 'min_steps': 3, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 3}, {'choice': [{'symbol': '<monom>', 'type': 'NT', 'min_steps': 3, 'recursive': False}, {'symbol': ' + ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<lexpr>', 'type': 'NT', 'min_steps': 4, 'recursive': True}], 'recursive': True, 'NT_kids': True, 'max_path': 4}], 'no_choices': 2}, '<monom>': {'choices': [{'choice': [{'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}, {'choice': [{'symbol': '<num>', 'type': 'NT', 'min_steps': 1, 'recursive': False}, {'symbol': ' * ', 'type': 'T', 'min_steps': 0, 'recursive': False}, {'symbol': '<vars>', 'type': 'NT', 'min_steps': 2, 'recursive': False}], 'recursive': False, 'NT_kids': True, 'max_path': 2}], 'no_choices': 2}, '<loperator>': {'choices': [{'choice': [{'symbol': '<', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '<=', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '>=', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '>', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}], 'no_choices': 4}, '<equal>': {'choices': [{'choice': [{'symbol': '==', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '!=', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}], 'no_choices': 2}, '<num>': {'choices': [{'choice': [{'symbol': '0', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '1', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '2', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '3', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '4', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '5', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '6', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '7', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '8', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '9', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '10', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}], 'no_choices': 11}, '<int_pos>': {'choices': [{'choice': [{'symbol': '1', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '2', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '3', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '4', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '5', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '6', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '7', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '8', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '9', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}], 'no_choices': 9}, '<int_pos_trunc>': {'choices': [{'choice': [{'symbol': '1', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '2', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '3', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': '4', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}], 'no_choices': 4}, '<idv>': {'choices': [{'choice': [{'symbol': 'u', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': 'v', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': 'w', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}, {'choice': [{'symbol': 'x', 'type': 'T', 'min_steps': 0, 'recursive': False}], 'recursive': False, 'NT_kids': False, 'max_path': 0}], 'no_choices': 4}} {'symbol': '<fc>', 'type': 'NT'}
CACHE:                   True
CODON_SIZE:              500
CORES:                   6
CROSSOVER:               <function variable_twopoint at 0x000001E93AF280D0>
CROSSOVER_PROBABILITY:   0.75
DATASET_DELIMITER:       None
DATASET_TEST:            None
DATASET_TRAIN:           None
DEBUG:                   False
DEPENDENCIES_BENEFIT:    False
ELITE_SIZE:              10
ERROR_METRIC:            None
EXPERIMENT_NAME:         eyecolor_sketch2
FILE_PATH:               C:\Users\birik\github\PonyGE2\src\..\results\eyecolor_sketch2\DESKTOP-3B7BIDK_25_1_19_193133_358608_4956_672631
FITNESS_FUNCTION:        <fitness.soga_fitness_trueskills.soga_fitness_trueskills object at 0x000001E93AF026A0>
GENERATIONS:             500
GENERATION_SIZE:         190
GENOME_OPERATIONS:       True
GRAMMAR_FILE:            soga_eyecolor_sketch2.pybnf
HILL_CLIMBING_HISTORY:   1000
INITIALISATION:          <function PI_grow at 0x000001E93AF245E0>
INIT_GENOME_LENGTH:      200
INTERACTION_PROBABILITY: 0.5
INVALID_SELECTION:       True
LOAD_STATE:              None
LOOKUP_BAD_FITNESS:      True
LOOKUP_FITNESS:          True
MACHINE:                 DESKTOP-3B7BIDK
MAX_GENOME_LENGTH:       None
MAX_INIT_TREE_DEPTH:     10
MAX_TREE_DEPTH:          24
MAX_TREE_NODES:          None
MAX_WRAPS:               0
MIN_INIT_TREE_DEPTH:     None
MULTIAGENT:              False
MULTICORE:               True
MUTATE_DUPLICATES:       False
MUTATION:                <function int_flip_per_codon at 0x000001E93AF285E0>
MUTATION_EVENTS:         1
MUTATION_PROBABILITY:    None
NO_CROSSOVER_INVALIDS:   False
NO_MUTATION_INVALIDS:    False
OPTIMIZE_CONSTANTS:      False
PERMUTATION_RAMPS:       5
POPULATION_SIZE:         200
PROGRAM_NAME:            biasedtugwar
RANDOM_SEED:             672631
REPLACEMENT:             <function generational at 0x000001E93AF28DC0>
REVERSE_MAPPING_TARGET:  None
RUNS:                    30
SAVE_ALL:                False
SAVE_PLOTS:              True
SAVE_STATE:              False
SAVE_STATE_STEP:         1
SCHC_COUNT_METHOD:       count_all
SEARCH_LOOP:             <function search_loop at 0x000001E93AEF1B80>
SEED_INDIVIDUALS:        []
SELECTION:               <function tournament at 0x000001E93AF28B80>
SELECTION_PROPORTION:    0.1
SILENT:                  False
STEP:                    <function step at 0x000001E93AF249D0>
TARGET:                  ponyge_rocks
TARGET_SEED_FOLDER:      None
TIME_STAMP:              DESKTOP-3B7BIDK_25_1_19_193133_358608_4956_672631
TOURNAMENT_SIZE:         3
VERBOSE:                 False
WITHIN_USED:             True
