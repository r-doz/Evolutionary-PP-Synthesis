Generation:
500

Phenotype:
earthquake = 4  - 7; 
alarm = gm([3, 1, 0], [3, 0, 0]) + 2 * 4; 
  if gm([4, 1, 0], [6, 0, 0]) > 6 { 
      if 0 * gm([3, 1, 0], [4, 0, 0]) < 6 { 
             burglary = 8  - 8 * 5; 
       } else { 
             burglary = 4 + 7  * johncalls; 
       } end if; 
 } else { 
       if 4 * alarm >= 1 { 
             burglary = 4  * alarm  - 2  * gm([6, 1, 0], [9, 0, 0]); 
       } else { 
             burglary = burglary; 
       } end if; 
 } end if; 
  if 9 * alarm <= 2 { 
       johncalls = 0  * gm([1, 1, 0], [2, 0, 0]); 
 } else { 
       burglary = 6; 
 } end if;

Genotype:
[261, 177, 299, 55, 206, 394, 10, 450, 59, 198, 212, 296, 225, 386, 119, 411, 126, 320, 351, 348, 266, 189, 140, 45, 192, 201, 145, 226, 292, 194, 36, 351, 236, 388, 88, 39, 129, 294, 316, 218, 5, 224, 435, 229, 163, 31, 334, 100, 385, 164, 286, 188, 329, 171, 290, 455, 367, 351, 235, 441, 324, 475, 47, 187, 22, 174, 253, 102, 360, 446, 335, 107, 187, 124, 183, 341, 352, 282, 173, 344, 84, 430, 344, 298, 496, 252, 336, 227, 268, 360, 354, 402, 487, 148, 117, 45, 227, 361, 430, 154, 472, 166, 411, 62, 16, 319, 477, 306, 170, 127, 158, 92, 396, 36, 278, 476, 155, 13, 62, 37, 24, 341, 396, 485, 45, 273, 234, 32, 495, 18, 47, 419, 195, 352, 251, 158, 190, 172, 143, 483, 76, 61, 494, 311, 28, 22, 185, 475, 92, 59, 327, 172, 250, 180, 129, 366, 321, 238, 54]
Tree:
(<fc> (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<const_term> (<num> 4)))   -  (<add_term> (<const_term> (<num> 7)))) ;)  {::} (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<vars> gm([ (<num> 3) , 1, 0], [ (<num> 3) , 0, 0])))  +  (<add_term> (<const_term> (<num> 2)  *  (<num> 4)))) ;)  {::}  if  (<bexpr> (<lexpr> (<monom> (<vars> gm([ (<num> 4) , 1, 0], [ (<num> 6) , 0, 0]))))   (<loperator> >)   (<num> 6))  { {:    if  (<bexpr> (<lexpr> (<monom> (<num> 0)  *  (<vars> gm([ (<num> 3) , 1, 0], [ (<num> 4) , 0, 0]))))   (<loperator> <)   (<num> 6))  { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 8)))   -  (<add_term> (<const_term> (<num> 8)  *  (<num> 5)))) ;)  :}     } else { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 4)))  +  (<add_term> (<num> 7)   *  (<vars> (<idv> johncalls)))) ;)  :}     } end if; :} } else { {:     if  (<bexpr> (<lexpr> (<monom> (<num> 4)  *  (<vars> (<idv> alarm))))   (<loperator> >=)   (<num> 1))  { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<num> 4)   *  (<vars> (<idv> alarm)))   -  (<add_term> (<num> 2)   *  (<vars> gm([ (<num> 6) , 1, 0], [ (<num> 9) , 0, 0])))) ;)  :}     } else { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<vars> (<idv> burglary)))) ;)  :}     } end if; :} } end if; {::}  if  (<bexpr> (<lexpr> (<monom> (<num> 9)  *  (<vars> (<idv> alarm))))   (<loperator> <=)   (<num> 2))  { {:      (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<num> 0)   *  (<vars> gm([ (<num> 1) , 1, 0], [ (<num> 2) , 0, 0])))) ;)  :} } else { {:      (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 6)))) ;)  :} } end if;)
Fitness on 5000 data:
-inf

Fitness:
-inf