# Generated from ASGMT.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,98,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,
        5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,5,9,55,8,9,10,9,12,9,58,
        9,9,1,10,3,10,61,8,10,1,10,4,10,64,8,10,11,10,12,10,65,1,10,1,10,
        5,10,70,8,10,10,10,12,10,73,9,10,3,10,75,8,10,1,11,1,11,1,11,1,11,
        5,11,81,8,11,10,11,12,11,84,9,11,1,11,1,11,1,11,1,11,1,11,1,12,1,
        12,1,12,1,12,1,13,1,13,1,14,1,14,1,82,0,15,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,0,29,14,1,0,3,3,0,9,
        10,13,13,32,32,2,0,65,90,97,122,1,0,48,57,103,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,29,1,0,0,0,1,31,1,0,0,0,3,33,1,0,0,0,5,35,1,0,
        0,0,7,37,1,0,0,0,9,39,1,0,0,0,11,41,1,0,0,0,13,45,1,0,0,0,15,47,
        1,0,0,0,17,49,1,0,0,0,19,51,1,0,0,0,21,60,1,0,0,0,23,76,1,0,0,0,
        25,90,1,0,0,0,27,94,1,0,0,0,29,96,1,0,0,0,31,32,5,61,0,0,32,2,1,
        0,0,0,33,34,5,43,0,0,34,4,1,0,0,0,35,36,5,42,0,0,36,6,1,0,0,0,37,
        38,5,91,0,0,38,8,1,0,0,0,39,40,5,93,0,0,40,10,1,0,0,0,41,42,5,103,
        0,0,42,43,5,109,0,0,43,44,5,40,0,0,44,12,1,0,0,0,45,46,5,44,0,0,
        46,14,1,0,0,0,47,48,5,41,0,0,48,16,1,0,0,0,49,50,5,45,0,0,50,18,
        1,0,0,0,51,56,3,27,13,0,52,55,3,27,13,0,53,55,3,29,14,0,54,52,1,
        0,0,0,54,53,1,0,0,0,55,58,1,0,0,0,56,54,1,0,0,0,56,57,1,0,0,0,57,
        20,1,0,0,0,58,56,1,0,0,0,59,61,5,45,0,0,60,59,1,0,0,0,60,61,1,0,
        0,0,61,63,1,0,0,0,62,64,3,29,14,0,63,62,1,0,0,0,64,65,1,0,0,0,65,
        63,1,0,0,0,65,66,1,0,0,0,66,74,1,0,0,0,67,71,5,46,0,0,68,70,3,29,
        14,0,69,68,1,0,0,0,70,73,1,0,0,0,71,69,1,0,0,0,71,72,1,0,0,0,72,
        75,1,0,0,0,73,71,1,0,0,0,74,67,1,0,0,0,74,75,1,0,0,0,75,22,1,0,0,
        0,76,77,5,47,0,0,77,78,5,42,0,0,78,82,1,0,0,0,79,81,9,0,0,0,80,79,
        1,0,0,0,81,84,1,0,0,0,82,83,1,0,0,0,82,80,1,0,0,0,83,85,1,0,0,0,
        84,82,1,0,0,0,85,86,5,42,0,0,86,87,5,47,0,0,87,88,1,0,0,0,88,89,
        6,11,0,0,89,24,1,0,0,0,90,91,7,0,0,0,91,92,1,0,0,0,92,93,6,12,0,
        0,93,26,1,0,0,0,94,95,7,1,0,0,95,28,1,0,0,0,96,97,7,2,0,0,97,30,
        1,0,0,0,8,0,54,56,60,65,71,74,82,1,6,0,0
    ]

class ASGMTLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    IDV = 10
    NUM = 11
    COMM = 12
    WS = 13
    DIGIT = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'+'", "'*'", "'['", "']'", "'gm('", "','", "')'", "'-'" ]

    symbolicNames = [ "<INVALID>",
            "IDV", "NUM", "COMM", "WS", "DIGIT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "IDV", "NUM", "COMM", "WS", "ALPHA", "DIGIT" ]

    grammarFileName = "ASGMT.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


