Generation:
500

Phenotype:
earthquake = alarm  - 2; 
alarm = gm([9, 1, 0], [3, 0, 0])  - gm([4, 1, 0], [4, 0, 0]); 
  if 1 * gm([9, 1, 0], [6, 0, 0]) <= 0 { 
      if 4 * gm([1, 1, 0], [8, 0, 0]) >= 2 { 
             johncalls = gm([8, 1, 0], [9, 0, 0])  - 9 * 4; 
       } else { 
             earthquake = 9 + 3  * gm([3, 1, 0], [9, 0, 0]); 
       } end if; 
 } else { 
       if johncalls <= 2 { 
             johncalls = 8 + 3  * johncalls; 
       } else { 
             johncalls = 1  * gm([5, 1, 0], [8, 0, 0])  - 1 * 4; 
       } end if; 
 } end if; 
  if 9 * gm([6, 1, 0], [0, 0, 0]) < 9 { 
       earthquake = gm([2, 1, 0], [3, 0, 0])  - 6 * 7; 
 } else { 
       burglary = johncalls + 8  * alarm; 
 } end if;

Genotype:
[8, 217, 67, 226, 317, 52, 383, 262, 395, 400, 338, 497, 495, 339, 416, 452, 289, 408, 345, 298, 51, 290, 420, 55, 278, 281, 94, 362, 169, 469, 484, 282, 483, 11, 349, 413, 341, 9, 99, 201, 152, 166, 351, 131, 185, 261, 280, 419, 35, 188, 229, 359, 55, 170, 156, 62, 120, 208, 194, 306, 88, 326, 359, 457, 118, 135, 33, 496, 309, 349, 268, 262, 26, 387, 344, 68, 456, 256, 391, 213, 7, 74, 409, 260, 124, 113, 111, 258, 185, 449, 20, 8, 107, 242, 38, 489, 249, 222, 437, 273, 272, 339, 418, 233, 182, 24, 179, 483, 132, 325, 240, 423, 269, 203, 229, 421, 319, 398, 119, 423, 395, 220, 32, 233, 430, 1, 200, 326, 195, 130, 29, 377, 17, 215, 199, 179, 499, 482, 379, 343, 362, 342, 447, 139, 368, 86, 73, 308, 32, 384, 301, 415, 263, 237, 277, 384, 62, 475, 34, 216, 242, 351, 74, 328, 408, 158, 60, 317, 9, 384, 266, 310, 106, 272, 330, 101, 436, 177, 400, 500]
Tree:
(<fc> (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<vars> (<idv> alarm)))   -  (<add_term> (<const_term> (<num> 2)))) ;)  {::} (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<vars> gm([ (<num> 9) , 1, 0], [ (<num> 3) , 0, 0])))   -  (<add_term> (<vars> gm([ (<num> 4) , 1, 0], [ (<num> 4) , 0, 0])))) ;)  {::}  if  (<bexpr> (<lexpr> (<monom> (<num> 1)  *  (<vars> gm([ (<num> 9) , 1, 0], [ (<num> 6) , 0, 0]))))   (<loperator> <=)   (<num> 0))  { {:    if  (<bexpr> (<lexpr> (<monom> (<num> 4)  *  (<vars> gm([ (<num> 1) , 1, 0], [ (<num> 8) , 0, 0]))))   (<loperator> >=)   (<num> 2))  { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<vars> gm([ (<num> 8) , 1, 0], [ (<num> 9) , 0, 0])))   -  (<add_term> (<const_term> (<num> 9)  *  (<num> 4)))) ;)  :}     } else { {:          (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<const_term> (<num> 9)))  +  (<add_term> (<num> 3)   *  (<vars> gm([ (<num> 3) , 1, 0], [ (<num> 9) , 0, 0])))) ;)  :}     } end if; :} } else { {:     if  (<bexpr> (<lexpr> (<monom> (<vars> (<idv> johncalls))))   (<loperator> <=)   (<num> 2))  { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<const_term> (<num> 8)))  +  (<add_term> (<num> 3)   *  (<vars> (<idv> johncalls)))) ;)  :}     } else { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<num> 1)   *  (<vars> gm([ (<num> 5) , 1, 0], [ (<num> 8) , 0, 0])))   -  (<add_term> (<const_term> (<num> 1)  *  (<num> 4)))) ;)  :}     } end if; :} } end if; {::}  if  (<bexpr> (<lexpr> (<monom> (<num> 9)  *  (<vars> gm([ (<num> 6) , 1, 0], [ (<num> 0) , 0, 0]))))   (<loperator> <)   (<num> 9))  { {:      (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<vars> gm([ (<num> 2) , 1, 0], [ (<num> 3) , 0, 0])))   -  (<add_term> (<const_term> (<num> 6)  *  (<num> 7)))) ;)  :} } else { {:      (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<vars> (<idv> johncalls)))  +  (<add_term> (<num> 8)   *  (<vars> (<idv> alarm)))) ;)  :} } end if;)
Fitness on 5000 data:
-inf

Fitness:
-inf