Generation:
500

Phenotype:
johncalls = 2  * gm([7, 1, 0], [2, 0, 0])  - earthquake; 
burglary = gm([8, 1, 0], [1, 0, 0])  - 4 * 7; 
  if gm([6, 1, 0], [0, 0, 0]) > 1 { 
      if burglary < 3 { 
             johncalls = 0 * 5 + gm([0, 1, 0], [2, 0, 0]); 
       } else { 
             earthquake = johncalls  - 8 * 7; 
       } end if; 
 } else { 
       if earthquake >= 9 { 
             alarm = 6  * earthquake; 
       } else { 
             earthquake = 2  * gm([4, 1, 0], [4, 0, 0]) + 4  * burglary; 
       } end if; 
 } end if; 
  if 4 * gm([3, 1, 0], [8, 0, 0]) > 9 { 
       johncalls = 3 * 1 + 5  * burglary; 
 } else { 
       alarm = johncalls + 3; 
 } end if;

Genotype:
[345, 446, 13, 39, 163, 211, 161, 218, 207, 292, 100, 96, 156, 318, 136, 363, 6, 70, 469, 473, 284, 80, 475, 398, 172, 264, 133, 71, 240, 406, 60, 6, 46, 493, 339, 96, 389, 12, 192, 143, 66, 150, 231, 455, 65, 1, 416, 66, 185, 346, 170, 191, 304, 76, 109, 407, 479, 91, 310, 20, 158, 59, 284, 107, 305, 1, 371, 175, 231, 104, 103, 11, 123, 150, 279, 9, 271, 253, 259, 227, 334, 224, 427, 67, 459, 489, 382, 330, 255, 328, 323, 82, 435, 448, 172, 398, 55, 164, 192, 27, 240, 367, 421, 324, 479, 287, 308, 122, 74, 205, 491, 78, 463, 323, 147, 223, 437, 242, 48, 186, 265, 125, 383, 415, 498, 94, 286, 292, 190, 416, 149, 77, 5, 171, 410, 193, 75, 145, 262, 469, 446, 449, 374, 65, 261, 33, 91, 304, 421, 258, 267, 18, 59, 442, 143, 448, 213, 288, 464, 45, 273, 98, 308, 428, 457, 350, 226, 227, 208, 478, 366]
Tree:
(<fc> (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<num> 2)   *  (<vars> gm([ (<num> 7) , 1, 0], [ (<num> 2) , 0, 0])))   -  (<add_term> (<vars> (<idv> earthquake)))) ;)  {::} (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<vars> gm([ (<num> 8) , 1, 0], [ (<num> 1) , 0, 0])))   -  (<add_term> (<const_term> (<num> 4)  *  (<num> 7)))) ;)  {::}  if  (<bexpr> (<lexpr> (<monom> (<vars> gm([ (<num> 6) , 1, 0], [ (<num> 0) , 0, 0]))))   (<loperator> >)   (<num> 1))  { {:    if  (<bexpr> (<lexpr> (<monom> (<vars> (<idv> burglary))))   (<loperator> <)   (<num> 3))  { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<const_term> (<num> 0)  *  (<num> 5)))  +  (<add_term> (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 2) , 0, 0])))) ;)  :}     } else { {:          (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<vars> (<idv> johncalls)))   -  (<add_term> (<const_term> (<num> 8)  *  (<num> 7)))) ;)  :}     } end if; :} } else { {:     if  (<bexpr> (<lexpr> (<monom> (<vars> (<idv> earthquake))))   (<loperator> >=)   (<num> 9))  { {:          (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<num> 6)   *  (<vars> (<idv> earthquake)))) ;)  :}     } else { {:          (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<num> 2)   *  (<vars> gm([ (<num> 4) , 1, 0], [ (<num> 4) , 0, 0])))  +  (<add_term> (<num> 4)   *  (<vars> (<idv> burglary)))) ;)  :}     } end if; :} } end if; {::}  if  (<bexpr> (<lexpr> (<monom> (<num> 4)  *  (<vars> gm([ (<num> 3) , 1, 0], [ (<num> 8) , 0, 0]))))   (<loperator> >)   (<num> 9))  { {:      (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<const_term> (<num> 3)  *  (<num> 1)))  +  (<add_term> (<num> 5)   *  (<vars> (<idv> burglary)))) ;)  :} } else { {:      (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<vars> (<idv> johncalls)))  +  (<add_term> (<const_term> (<num> 3)))) ;)  :} } end if;)
Fitness on 5000 data:
-inf

Fitness:
-inf