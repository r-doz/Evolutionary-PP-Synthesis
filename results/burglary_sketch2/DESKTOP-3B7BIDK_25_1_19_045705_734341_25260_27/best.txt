Generation:
500

Phenotype:
johncalls = alarm + 3  * gm([8, 1, 0], [7, 0, 0]); 
johncalls = johncalls + burglary; 
  if 4 * gm([0, 1, 0], [3, 0, 0]) >= 5 { 
      if earthquake == 9 { 
             alarm = johncalls; 
       } else { 
             johncalls = 9 * 8; 
       } end if; 
 } else { 
       if 4 * johncalls >= 8 { 
             burglary = gm([5, 1, 0], [8, 0, 0]); 
       } else { 
             johncalls = gm([4, 1, 0], [2, 0, 0]) + 5  * burglary; 
       } end if; 
 } end if; 
  if 1 * gm([8, 1, 0], [1, 0, 0]) > 3 { 
       burglary = 4; 
 } else { 
       burglary = 5; 
 } end if;

Genotype:
[490, 37, 422, 129, 93, 375, 313, 379, 179, 129, 314, 50, 466, 86, 135, 88, 399, 365, 157, 183, 81, 369, 38, 103, 287, 173, 262, 196, 152, 144, 447, 134, 416, 370, 145, 473, 429, 381, 92, 317, 243, 426, 221, 48, 150, 486, 53, 239, 14, 124, 109, 157, 255, 93, 124, 195, 52, 285, 417, 480, 296, 288, 112, 48, 349, 187, 138, 82, 122, 246, 217, 383, 356, 424, 58, 421, 234, 479, 407, 395, 179, 482, 97, 270, 114, 65, 414, 251, 135, 57, 28, 435, 64, 492, 125, 152, 282, 404, 362, 290, 419, 221, 317, 476, 132, 140, 273, 20, 431, 89, 330, 28, 386, 233, 494, 373, 63, 43, 396, 125, 491, 405, 276, 458, 172, 350, 326, 76, 56, 369, 387, 11, 380, 116, 12, 418, 272, 131, 252, 173, 374]
Tree:
(<fc> (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<vars> (<idv> alarm)))  +  (<add_term> (<num> 3)   *  (<vars> gm([ (<num> 8) , 1, 0], [ (<num> 7) , 0, 0])))) ;)  {::} (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<vars> (<idv> johncalls)))  +  (<add_term> (<vars> (<idv> burglary)))) ;)  {::}  if  (<bexpr> (<lexpr> (<monom> (<num> 4)  *  (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 3) , 0, 0]))))   (<loperator> >=)   (<num> 5))  { {:    if  (<bexpr> (<idv> earthquake)   (<equal> ==)   (<num> 9))  { {:          (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<vars> (<idv> johncalls)))) ;)  :}     } else { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<const_term> (<num> 9)  *  (<num> 8)))) ;)  :}     } end if; :} } else { {:     if  (<bexpr> (<lexpr> (<monom> (<num> 4)  *  (<vars> (<idv> johncalls))))   (<loperator> >=)   (<num> 8))  { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<vars> gm([ (<num> 5) , 1, 0], [ (<num> 8) , 0, 0])))) ;)  :}     } else { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<vars> gm([ (<num> 4) , 1, 0], [ (<num> 2) , 0, 0])))  +  (<add_term> (<num> 5)   *  (<vars> (<idv> burglary)))) ;)  :}     } end if; :} } end if; {::}  if  (<bexpr> (<lexpr> (<monom> (<num> 1)  *  (<vars> gm([ (<num> 8) , 1, 0], [ (<num> 1) , 0, 0]))))   (<loperator> >)   (<num> 3))  { {:      (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 4)))) ;)  :} } else { {:      (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 5)))) ;)  :} } end if;)
Fitness on 5000 data:
-inf

Fitness:
-inf