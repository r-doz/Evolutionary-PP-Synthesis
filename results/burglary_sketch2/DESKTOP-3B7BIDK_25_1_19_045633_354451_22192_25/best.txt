Generation:
500

Phenotype:
earthquake = 4 + 4  * earthquake; 
alarm = gm([6, 1, 0], [1, 0, 0])  - 5  * johncalls; 
  if alarm >= 9 { 
      if burglary < 6 { 
             johncalls = 5  - alarm; 
       } else { 
             burglary = 2  * alarm + 0  * gm([6, 1, 0], [5, 0, 0]); 
       } end if; 
 } else { 
       if johncalls >= 7 { 
             earthquake = 7  * alarm  - alarm; 
       } else { 
             alarm = johncalls  - gm([0, 1, 0], [8, 0, 0]); 
       } end if; 
 } end if; 
  if 9 * earthquake < 7 { 
       earthquake = 1 * 1; 
 } else { 
       johncalls = 4  * gm([2, 1, 0], [4, 0, 0])  - 5; 
 } end if;

Genotype:
[109, 21, 17, 51, 295, 262, 281, 362, 307, 180, 125, 36, 262, 277, 416, 356, 411, 389, 43, 104, 425, 9, 327, 485, 63, 350, 112, 106, 399, 347, 186, 297, 326, 181, 481, 163, 292, 381, 324, 200, 30, 364, 133, 55, 460, 342, 140, 354, 493, 491, 38, 249, 133, 352, 14, 189, 130, 438, 334, 236, 34, 305, 248, 325, 284, 118, 52, 332, 447, 66, 362, 149, 28, 55, 58, 37, 51, 246, 496, 381, 125, 286, 40, 88, 51, 471, 291, 322, 367, 33, 106, 264, 216, 250, 174, 311, 35, 322, 262, 71, 410, 458, 220, 166, 32, 297, 350, 455, 7, 110, 36, 27, 483, 390, 2, 52, 19, 248, 18, 303, 63, 48, 447, 328, 457, 321, 262, 477, 408, 479, 139, 53, 269, 204, 248, 289, 220, 265, 67, 385, 304, 294, 80, 257, 316, 436, 16, 135, 8, 192, 487, 216, 24, 496, 258, 189, 369, 389, 365, 75, 462, 388, 58, 242, 174]
Tree:
(<fc> (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<const_term> (<num> 4)))  +  (<add_term> (<num> 4)   *  (<vars> (<idv> earthquake)))) ;)  {::} (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<vars> gm([ (<num> 6) , 1, 0], [ (<num> 1) , 0, 0])))   -  (<add_term> (<num> 5)   *  (<vars> (<idv> johncalls)))) ;)  {::}  if  (<bexpr> (<lexpr> (<monom> (<vars> (<idv> alarm))))   (<loperator> >=)   (<num> 9))  { {:    if  (<bexpr> (<lexpr> (<monom> (<vars> (<idv> burglary))))   (<loperator> <)   (<num> 6))  { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<const_term> (<num> 5)))   -  (<add_term> (<vars> (<idv> alarm)))) ;)  :}     } else { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<num> 2)   *  (<vars> (<idv> alarm)))  +  (<add_term> (<num> 0)   *  (<vars> gm([ (<num> 6) , 1, 0], [ (<num> 5) , 0, 0])))) ;)  :}     } end if; :} } else { {:     if  (<bexpr> (<lexpr> (<monom> (<vars> (<idv> johncalls))))   (<loperator> >=)   (<num> 7))  { {:          (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<num> 7)   *  (<vars> (<idv> alarm)))   -  (<add_term> (<vars> (<idv> alarm)))) ;)  :}     } else { {:          (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<vars> (<idv> johncalls)))   -  (<add_term> (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 8) , 0, 0])))) ;)  :}     } end if; :} } end if; {::}  if  (<bexpr> (<lexpr> (<monom> (<num> 9)  *  (<vars> (<idv> earthquake))))   (<loperator> <)   (<num> 7))  { {:      (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<const_term> (<num> 1)  *  (<num> 1)))) ;)  :} } else { {:      (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<num> 4)   *  (<vars> gm([ (<num> 2) , 1, 0], [ (<num> 4) , 0, 0])))   -  (<add_term> (<const_term> (<num> 5)))) ;)  :} } end if;)
Fitness on 5000 data:
-inf

Fitness:
-inf