Generation:
500

Phenotype:
johncalls = 4 + 8 * 0; 
johncalls = 6 + gm([4, 1, 0], [6, 0, 0]); 
  if johncalls != 8 { 
      if 8 * gm([5, 1, 0], [1, 0, 0]) <= 2 { 
             johncalls = earthquake + gm([9, 1, 0], [3, 0, 0]); 
       } else { 
             earthquake = 2  * gm([5, 1, 0], [7, 0, 0])  - 0 * 5; 
       } end if; 
 } else { 
       if 5 * burglary > 0 { 
             burglary = alarm; 
       } else { 
             alarm = 0  * alarm  - earthquake; 
       } end if; 
 } end if; 
  if johncalls <= 8 { 
       alarm = gm([7, 1, 0], [1, 0, 0])  - 7  * gm([1, 1, 0], [2, 0, 0]); 
 } else { 
       johncalls = 8 * 8  - 0; 
 } end if;

Genotype:
[491, 89, 56, 196, 131, 245, 70, 416, 451, 161, 95, 313, 365, 348, 260, 191, 480, 491, 297, 123, 490, 238, 49, 381, 348, 129, 163, 49, 170, 384, 238, 327, 152, 58, 390, 107, 454, 122, 432, 36, 241, 123, 352, 337, 39, 278, 171, 294, 24, 422, 282, 39, 174, 125, 492, 398, 210, 476, 468, 89, 223, 303, 83, 120, 229, 327, 231, 164, 357, 135, 51, 11, 240, 139, 290, 413, 76, 376, 96, 138, 345, 207, 488, 386, 167, 255, 473, 340, 154, 196, 187, 258, 42, 337, 388, 84, 208, 489, 391, 461, 492, 281, 385, 481, 167, 5, 211, 271, 248, 124, 87, 36, 476, 151, 37, 147, 173, 464, 390, 236, 164, 76, 493, 76, 380, 136, 157, 196, 442, 166, 471, 294, 263, 323, 73, 223, 53, 485, 418, 386, 454, 334, 320, 396, 459, 406, 131, 121, 110, 109, 278, 444, 189, 429, 372, 223, 192, 138, 483, 40, 157, 207, 497]
Tree:
(<fc> (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<const_term> (<num> 4)))  +  (<add_term> (<const_term> (<num> 8)  *  (<num> 0)))) ;)  {::} (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<const_term> (<num> 6)))  +  (<add_term> (<vars> gm([ (<num> 4) , 1, 0], [ (<num> 6) , 0, 0])))) ;)  {::}  if  (<bexpr> (<idv> johncalls)   (<equal> !=)   (<num> 8))  { {:    if  (<bexpr> (<lexpr> (<monom> (<num> 8)  *  (<vars> gm([ (<num> 5) , 1, 0], [ (<num> 1) , 0, 0]))))   (<loperator> <=)   (<num> 2))  { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<vars> (<idv> earthquake)))  +  (<add_term> (<vars> gm([ (<num> 9) , 1, 0], [ (<num> 3) , 0, 0])))) ;)  :}     } else { {:          (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<num> 2)   *  (<vars> gm([ (<num> 5) , 1, 0], [ (<num> 7) , 0, 0])))   -  (<add_term> (<const_term> (<num> 0)  *  (<num> 5)))) ;)  :}     } end if; :} } else { {:     if  (<bexpr> (<lexpr> (<monom> (<num> 5)  *  (<vars> (<idv> burglary))))   (<loperator> >)   (<num> 0))  { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<vars> (<idv> alarm)))) ;)  :}     } else { {:          (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<num> 0)   *  (<vars> (<idv> alarm)))   -  (<add_term> (<vars> (<idv> earthquake)))) ;)  :}     } end if; :} } end if; {::}  if  (<bexpr> (<lexpr> (<monom> (<vars> (<idv> johncalls))))   (<loperator> <=)   (<num> 8))  { {:      (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<vars> gm([ (<num> 7) , 1, 0], [ (<num> 1) , 0, 0])))   -  (<add_term> (<num> 7)   *  (<vars> gm([ (<num> 1) , 1, 0], [ (<num> 2) , 0, 0])))) ;)  :} } else { {:      (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<const_term> (<num> 8)  *  (<num> 8)))   -  (<add_term> (<const_term> (<num> 0)))) ;)  :} } end if;)
Fitness on 5000 data:
-inf

Fitness:
-inf