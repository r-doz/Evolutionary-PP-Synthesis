Generation:
500

Phenotype:
burglary = 7 + gm([9, 1, 0], [0, 0, 0]); 
johncalls = burglary  - 0  * gm([5, 1, 0], [1, 0, 0]); 
  if gm([0, 1, 0], [6, 0, 0]) < 6 { 
      if 6 * johncalls >= 7 { 
             alarm = 5  - 7  * earthquake; 
       } else { 
             alarm = 0 * 0; 
       } end if; 
 } else { 
       if gm([6, 1, 0], [3, 0, 0]) > 6 { 
             johncalls = 6  - 3  * gm([4, 1, 0], [0, 0, 0]); 
       } else { 
             alarm = 6  * gm([1, 1, 0], [5, 0, 0]) + 0 * 1; 
       } end if; 
 } end if; 
  if 4 * earthquake < 8 { 
       burglary = 0  * earthquake + gm([8, 1, 0], [3, 0, 0]); 
 } else { 
       alarm = gm([0, 1, 0], [3, 0, 0])  - 1  * gm([0, 1, 0], [4, 0, 0]); 
 } end if;

Genotype:
[189, 321, 310, 132, 98, 358, 327, 325, 378, 80, 22, 387, 256, 449, 18, 111, 398, 215, 293, 299, 350, 310, 125, 415, 364, 486, 217, 247, 67, 210, 225, 447, 308, 240, 283, 18, 38, 484, 186, 78, 210, 490, 193, 296, 316, 331, 478, 135, 354, 402, 242, 315, 29, 239, 310, 377, 47, 230, 350, 91, 240, 203, 79, 158, 413, 166, 416, 304, 345, 107, 379, 363, 172, 330, 365, 174, 229, 186, 294, 320, 436, 468, 101, 397, 356, 24, 429, 188, 455, 438, 74, 23, 395, 366, 369, 101, 123, 330, 27, 211, 415, 220, 61, 101, 471, 310, 386, 173, 300, 30, 70, 246, 260, 105, 221, 376, 165, 97, 168, 219, 63, 65, 284, 1, 366, 370, 194, 407, 40, 290, 91, 21, 191, 235, 309, 332, 400, 277, 194, 325, 410, 22, 318, 453, 220, 27, 190, 321, 254, 389, 359, 161, 215, 486, 355, 214, 235, 9, 125, 111, 274, 138, 355, 302, 36, 411, 217, 114, 218, 66, 450, 14, 479, 166, 191]
Tree:
(<fc> (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 7)))  +  (<add_term> (<vars> gm([ (<num> 9) , 1, 0], [ (<num> 0) , 0, 0])))) ;)  {::} (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<vars> (<idv> burglary)))   -  (<add_term> (<num> 0)   *  (<vars> gm([ (<num> 5) , 1, 0], [ (<num> 1) , 0, 0])))) ;)  {::}  if  (<bexpr> (<lexpr> (<monom> (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 6) , 0, 0]))))   (<loperator> <)   (<num> 6))  { {:    if  (<bexpr> (<lexpr> (<monom> (<num> 6)  *  (<vars> (<idv> johncalls))))   (<loperator> >=)   (<num> 7))  { {:          (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<const_term> (<num> 5)))   -  (<add_term> (<num> 7)   *  (<vars> (<idv> earthquake)))) ;)  :}     } else { {:          (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<const_term> (<num> 0)  *  (<num> 0)))) ;)  :}     } end if; :} } else { {:     if  (<bexpr> (<lexpr> (<monom> (<vars> gm([ (<num> 6) , 1, 0], [ (<num> 3) , 0, 0]))))   (<loperator> >)   (<num> 6))  { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<const_term> (<num> 6)))   -  (<add_term> (<num> 3)   *  (<vars> gm([ (<num> 4) , 1, 0], [ (<num> 0) , 0, 0])))) ;)  :}     } else { {:          (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<num> 6)   *  (<vars> gm([ (<num> 1) , 1, 0], [ (<num> 5) , 0, 0])))  +  (<add_term> (<const_term> (<num> 0)  *  (<num> 1)))) ;)  :}     } end if; :} } end if; {::}  if  (<bexpr> (<lexpr> (<monom> (<num> 4)  *  (<vars> (<idv> earthquake))))   (<loperator> <)   (<num> 8))  { {:      (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<num> 0)   *  (<vars> (<idv> earthquake)))  +  (<add_term> (<vars> gm([ (<num> 8) , 1, 0], [ (<num> 3) , 0, 0])))) ;)  :} } else { {:      (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 3) , 0, 0])))   -  (<add_term> (<num> 1)   *  (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 4) , 0, 0])))) ;)  :} } end if;)
Fitness on 5000 data:
-inf

Fitness:
-inf