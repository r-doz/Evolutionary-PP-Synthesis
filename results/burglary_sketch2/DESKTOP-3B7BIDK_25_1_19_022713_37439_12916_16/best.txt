Generation:
500

Phenotype:
johncalls = 5; 
johncalls = 4  * gm([7, 1, 0], [6, 0, 0]); 
  if johncalls < 9 { 
      if alarm >= 1 { 
             johncalls = burglary + alarm; 
       } else { 
             johncalls = gm([0, 1, 0], [1, 0, 0]) + gm([3, 1, 0], [2, 0, 0]); 
       } end if; 
 } else { 
       if 8 * burglary >= 1 { 
             earthquake = 2  * johncalls + 9 * 6; 
       } else { 
             burglary = 6 + 0; 
       } end if; 
 } end if; 
  if johncalls < 1 { 
       alarm = 8 * 3 + gm([2, 1, 0], [3, 0, 0]); 
 } else { 
       burglary = 6 * 0; 
 } end if;

Genotype:
[246, 116, 209, 121, 150, 342, 11, 10, 236, 114, 133, 221, 397, 189, 498, 266, 250, 155, 349, 358, 227, 468, 233, 311, 108, 459, 414, 311, 261, 243, 276, 4, 468, 480, 402, 135, 269, 61, 198, 204, 359, 19, 362, 196, 53, 318, 88, 109, 83, 223, 253, 342, 262, 433, 155, 433, 474, 343, 160, 104, 58, 83, 242, 43, 372, 260, 108, 207, 46, 348, 322, 255, 29, 240, 111, 170, 262, 470, 240, 179, 477, 121, 476, 335, 18, 368, 157, 56, 236, 292, 432, 212, 75, 266, 312, 129, 191, 220, 108, 36, 395, 330, 207, 178, 10, 333, 75, 213, 120, 492, 164, 85, 207, 28, 192, 21, 444, 204, 326, 434, 383, 229, 333, 476, 18, 73, 458, 494, 0, 85, 376, 452, 99, 340, 298, 150, 314, 342, 497, 302, 210, 491, 431, 13, 26, 60, 460, 421, 265, 417, 275, 0, 496]
Tree:
(<fc> (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<const_term> (<num> 5)))) ;)  {::} (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<num> 4)   *  (<vars> gm([ (<num> 7) , 1, 0], [ (<num> 6) , 0, 0])))) ;)  {::}  if  (<bexpr> (<lexpr> (<monom> (<vars> (<idv> johncalls))))   (<loperator> <)   (<num> 9))  { {:    if  (<bexpr> (<lexpr> (<monom> (<vars> (<idv> alarm))))   (<loperator> >=)   (<num> 1))  { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<vars> (<idv> burglary)))  +  (<add_term> (<vars> (<idv> alarm)))) ;)  :}     } else { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 1) , 0, 0])))  +  (<add_term> (<vars> gm([ (<num> 3) , 1, 0], [ (<num> 2) , 0, 0])))) ;)  :}     } end if; :} } else { {:     if  (<bexpr> (<lexpr> (<monom> (<num> 8)  *  (<vars> (<idv> burglary))))   (<loperator> >=)   (<num> 1))  { {:          (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<num> 2)   *  (<vars> (<idv> johncalls)))  +  (<add_term> (<const_term> (<num> 9)  *  (<num> 6)))) ;)  :}     } else { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 6)))  +  (<add_term> (<const_term> (<num> 0)))) ;)  :}     } end if; :} } end if; {::}  if  (<bexpr> (<lexpr> (<monom> (<vars> (<idv> johncalls))))   (<loperator> <)   (<num> 1))  { {:      (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<const_term> (<num> 8)  *  (<num> 3)))  +  (<add_term> (<vars> gm([ (<num> 2) , 1, 0], [ (<num> 3) , 0, 0])))) ;)  :} } else { {:      (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 6)  *  (<num> 0)))) ;)  :} } end if;)
Fitness on 5000 data:
-inf

Fitness:
-inf