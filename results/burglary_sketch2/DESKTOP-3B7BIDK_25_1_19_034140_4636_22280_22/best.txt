Generation:
500

Phenotype:
earthquake = 7  - 4  * earthquake; 
burglary = 2  * earthquake + 3  * earthquake; 
  if earthquake != 6 { 
      if 3 * gm([7, 1, 0], [2, 0, 0]) <= 4 { 
             burglary = gm([6, 1, 0], [2, 0, 0]); 
       } else { 
             alarm = gm([0, 1, 0], [5, 0, 0]) + 4  * gm([4, 1, 0], [5, 0, 0]); 
       } end if; 
 } else { 
       if gm([0, 1, 0], [2, 0, 0]) < 3 { 
             burglary = burglary + 1; 
       } else { 
             johncalls = gm([4, 1, 0], [8, 0, 0]) + 0 * 7; 
       } end if; 
 } end if; 
  if 3 * gm([8, 1, 0], [0, 0, 0]) < 2 { 
       burglary = 5  * earthquake + johncalls; 
 } else { 
       alarm = gm([0, 1, 0], [0, 0, 0]); 
 } end if;

Genotype:
[12, 95, 376, 405, 137, 499, 363, 300, 264, 433, 407, 251, 94, 394, 208, 24, 214, 264, 142, 203, 228, 387, 278, 226, 220, 43, 393, 3, 148, 278, 90, 323, 28, 405, 155, 26, 76, 372, 432, 363, 447, 307, 328, 85, 74, 257, 172, 402, 359, 22, 181, 343, 443, 10, 296, 206, 376, 17, 478, 104, 325, 480, 323, 190, 204, 89, 35, 107, 21, 447, 494, 403, 283, 71, 199, 440, 88, 418, 324, 163, 178, 356, 411, 207, 198, 123, 470, 155, 100, 443, 330, 70, 48, 111, 481, 295, 435, 140, 346, 150, 90, 14, 78, 471, 302, 256, 252, 277, 116, 449, 318, 491, 466, 191, 462, 20, 237, 486, 143, 263, 277, 111, 47, 65, 421, 122, 384, 158, 284, 71, 227, 25, 131, 124, 419, 78, 58, 286, 246, 167, 410, 85, 258, 192, 35, 345, 173, 105, 194, 67, 468, 341, 298, 458, 234, 222, 322, 275, 24, 202, 351, 234]
Tree:
(<fc> (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<const_term> (<num> 7)))   -  (<add_term> (<num> 4)   *  (<vars> (<idv> earthquake)))) ;)  {::} (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<num> 2)   *  (<vars> (<idv> earthquake)))  +  (<add_term> (<num> 3)   *  (<vars> (<idv> earthquake)))) ;)  {::}  if  (<bexpr> (<idv> earthquake)   (<equal> !=)   (<num> 6))  { {:    if  (<bexpr> (<lexpr> (<monom> (<num> 3)  *  (<vars> gm([ (<num> 7) , 1, 0], [ (<num> 2) , 0, 0]))))   (<loperator> <=)   (<num> 4))  { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<vars> gm([ (<num> 6) , 1, 0], [ (<num> 2) , 0, 0])))) ;)  :}     } else { {:          (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 5) , 0, 0])))  +  (<add_term> (<num> 4)   *  (<vars> gm([ (<num> 4) , 1, 0], [ (<num> 5) , 0, 0])))) ;)  :}     } end if; :} } else { {:     if  (<bexpr> (<lexpr> (<monom> (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 2) , 0, 0]))))   (<loperator> <)   (<num> 3))  { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<vars> (<idv> burglary)))  +  (<add_term> (<const_term> (<num> 1)))) ;)  :}     } else { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<vars> gm([ (<num> 4) , 1, 0], [ (<num> 8) , 0, 0])))  +  (<add_term> (<const_term> (<num> 0)  *  (<num> 7)))) ;)  :}     } end if; :} } end if; {::}  if  (<bexpr> (<lexpr> (<monom> (<num> 3)  *  (<vars> gm([ (<num> 8) , 1, 0], [ (<num> 0) , 0, 0]))))   (<loperator> <)   (<num> 2))  { {:      (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<num> 5)   *  (<vars> (<idv> earthquake)))  +  (<add_term> (<vars> (<idv> johncalls)))) ;)  :} } else { {:      (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 0) , 0, 0])))) ;)  :} } end if;)
Fitness on 5000 data:
-inf

Fitness:
-inf