Generation:
500

Phenotype:
burglary = 4; 
earthquake = gm([5, 1, 0], [5, 0, 0]); 
  if burglary != 4 { 
      if gm([0, 1, 0], [6, 0, 0]) <= 7 { 
             burglary = 8  - earthquake; 
       } else { 
             burglary = gm([7, 1, 0], [3, 0, 0]) + 2  * gm([0, 1, 0], [2, 0, 0]); 
       } end if; 
 } else { 
       if gm([4, 1, 0], [2, 0, 0]) > 6 { 
             burglary = 8 * 6  - 5; 
       } else { 
             earthquake = 5 * 6 + 0  * johncalls; 
       } end if; 
 } end if; 
  if gm([5, 1, 0], [9, 0, 0]) > 5 { 
       earthquake = johncalls + 0 * 1; 
 } else { 
       burglary = 2  * earthquake; 
 } end if;

Genotype:
[336, 73, 191, 329, 285, 225, 173, 295, 260, 311, 45, 46, 57, 276, 428, 284, 204, 457, 311, 23, 65, 200, 443, 345, 128, 280, 368, 13, 26, 112, 198, 80, 135, 212, 141, 463, 320, 107, 349, 371, 236, 115, 466, 204, 152, 124, 231, 12, 327, 400, 251, 202, 459, 149, 170, 363, 334, 0, 285, 86, 222, 286, 260, 59, 151, 405, 366, 352, 12, 466, 405, 362, 237, 318, 108, 299, 208, 55, 432, 194, 389, 91, 372, 317, 341, 295, 48, 492, 143, 443, 144, 322, 257, 311, 297, 312, 336, 60, 391, 495, 405, 157, 87, 69, 244, 115, 410, 278, 68, 128, 253, 23, 219, 411, 186, 146, 209, 479, 321, 306, 144, 199, 416, 447, 404, 459, 310, 164, 75, 64, 132, 328, 16, 431, 337, 311, 407, 401, 193, 211, 217, 316, 337, 134, 173, 208, 393, 194, 252, 196, 481]
Tree:
(<fc> (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 4)))) ;)  {::} (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<vars> gm([ (<num> 5) , 1, 0], [ (<num> 5) , 0, 0])))) ;)  {::}  if  (<bexpr> (<idv> burglary)   (<equal> !=)   (<num> 4))  { {:    if  (<bexpr> (<lexpr> (<monom> (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 6) , 0, 0]))))   (<loperator> <=)   (<num> 7))  { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 8)))   -  (<add_term> (<vars> (<idv> earthquake)))) ;)  :}     } else { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<vars> gm([ (<num> 7) , 1, 0], [ (<num> 3) , 0, 0])))  +  (<add_term> (<num> 2)   *  (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 2) , 0, 0])))) ;)  :}     } end if; :} } else { {:     if  (<bexpr> (<lexpr> (<monom> (<vars> gm([ (<num> 4) , 1, 0], [ (<num> 2) , 0, 0]))))   (<loperator> >)   (<num> 6))  { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 8)  *  (<num> 6)))   -  (<add_term> (<const_term> (<num> 5)))) ;)  :}     } else { {:          (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<const_term> (<num> 5)  *  (<num> 6)))  +  (<add_term> (<num> 0)   *  (<vars> (<idv> johncalls)))) ;)  :}     } end if; :} } end if; {::}  if  (<bexpr> (<lexpr> (<monom> (<vars> gm([ (<num> 5) , 1, 0], [ (<num> 9) , 0, 0]))))   (<loperator> >)   (<num> 5))  { {:      (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<vars> (<idv> johncalls)))  +  (<add_term> (<const_term> (<num> 0)  *  (<num> 1)))) ;)  :} } else { {:      (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<num> 2)   *  (<vars> (<idv> earthquake)))) ;)  :} } end if;)
Fitness on 5000 data:
-inf

Fitness:
-inf