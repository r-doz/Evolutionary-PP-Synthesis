Generation:
500

Phenotype:
johncalls = gm([3, 1, 0], [2, 0, 0])  - 1; 
burglary = 8 * 4 + 3; 
  if gm([2, 1, 0], [5, 0, 0]) < 2 { 
      if 3 * burglary < 8 { 
             johncalls = gm([8, 1, 0], [0, 0, 0])  - 1  * burglary; 
       } else { 
             johncalls = 0  * burglary; 
       } end if; 
 } else { 
       if alarm > 7 { 
             earthquake = 9; 
       } else { 
             burglary = 9 * 9  - gm([3, 1, 0], [4, 0, 0]); 
       } end if; 
 } end if; 
  if 2 * johncalls >= 1 { 
       alarm = gm([0, 1, 0], [1, 0, 0]) + gm([7, 1, 0], [2, 0, 0]); 
 } else { 
       burglary = 3 + earthquake; 
 } end if;

Genotype:
[20, 207, 495, 299, 107, 386, 465, 158, 460, 430, 223, 494, 287, 31, 47, 481, 423, 249, 121, 122, 417, 40, 55, 188, 280, 138, 226, 296, 148, 113, 243, 99, 431, 429, 212, 433, 452, 297, 255, 42, 248, 433, 8, 88, 285, 255, 60, 442, 416, 12, 383, 300, 88, 96, 301, 478, 278, 424, 112, 178, 32, 21, 441, 198, 431, 357, 400, 212, 304, 427, 240, 463, 239, 199, 94, 11, 211, 340, 152, 313, 302, 89, 383, 0, 443, 183, 344, 269, 447, 269, 35, 33, 282, 430, 20, 195, 414, 353, 101, 487, 2, 366, 398, 73, 174, 242, 8, 140, 467, 231, 409, 405, 59, 441, 131, 68, 334, 266, 418, 333, 330, 177, 58, 446, 79, 142, 435, 9, 21, 20, 105, 348, 132, 285, 161, 484, 187, 480, 290, 465, 434, 21, 433, 383, 492, 359, 311, 335, 253, 364, 329, 462, 234, 327, 222, 190, 446, 275, 91, 106]
Tree:
(<fc> (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<vars> gm([ (<num> 3) , 1, 0], [ (<num> 2) , 0, 0])))   -  (<add_term> (<const_term> (<num> 1)))) ;)  {::} (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 8)  *  (<num> 4)))  +  (<add_term> (<const_term> (<num> 3)))) ;)  {::}  if  (<bexpr> (<lexpr> (<monom> (<vars> gm([ (<num> 2) , 1, 0], [ (<num> 5) , 0, 0]))))   (<loperator> <)   (<num> 2))  { {:    if  (<bexpr> (<lexpr> (<monom> (<num> 3)  *  (<vars> (<idv> burglary))))   (<loperator> <)   (<num> 8))  { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<vars> gm([ (<num> 8) , 1, 0], [ (<num> 0) , 0, 0])))   -  (<add_term> (<num> 1)   *  (<vars> (<idv> burglary)))) ;)  :}     } else { {:          (<assignment> (<idv> johncalls)  =  (<add> (<add_term> (<num> 0)   *  (<vars> (<idv> burglary)))) ;)  :}     } end if; :} } else { {:     if  (<bexpr> (<lexpr> (<monom> (<vars> (<idv> alarm))))   (<loperator> >)   (<num> 7))  { {:          (<assignment> (<idv> earthquake)  =  (<add> (<add_term> (<const_term> (<num> 9)))) ;)  :}     } else { {:          (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 9)  *  (<num> 9)))   -  (<add_term> (<vars> gm([ (<num> 3) , 1, 0], [ (<num> 4) , 0, 0])))) ;)  :}     } end if; :} } end if; {::}  if  (<bexpr> (<lexpr> (<monom> (<num> 2)  *  (<vars> (<idv> johncalls))))   (<loperator> >=)   (<num> 1))  { {:      (<assignment> (<idv> alarm)  =  (<add> (<add_term> (<vars> gm([ (<num> 0) , 1, 0], [ (<num> 1) , 0, 0])))  +  (<add_term> (<vars> gm([ (<num> 7) , 1, 0], [ (<num> 2) , 0, 0])))) ;)  :} } else { {:      (<assignment> (<idv> burglary)  =  (<add> (<add_term> (<const_term> (<num> 3)))  +  (<add_term> (<vars> (<idv> earthquake)))) ;)  :} } end if;)
Fitness on 5000 data:
-inf

Fitness:
-inf